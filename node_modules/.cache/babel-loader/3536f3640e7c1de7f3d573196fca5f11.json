{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan\\\\Documents\\\\ECE\\\\Technologie Web\\\\repos\\\\ING4_Apprenti_SI_01_Lemesle_Johan\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Channels from './Channels';\nimport './App.css'; //Permet d'inserer un retour Ã  la ligne\n//https://github.com/yosuke-furukawa/react-nl2br#readme\n\nconst nl2br = require('react-nl2br');\n\nconst styles = {\n  root: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#565E71',\n    padding: 50\n  },\n  main: {\n    backgroundColor: '#373B44',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  channel: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  messages: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n    '& ul': {\n      'margin': 0,\n      'padding': 0,\n      'textIndent': 0,\n      'listStyleType': 0\n    }\n  },\n  message: {\n    margin: '.2rem',\n    padding: '.2rem',\n    // backgroundColor: '#66728E',\n    ':hover': {\n      backgroundColor: 'rgba(255,255,255,.2)'\n    }\n  },\n  form: {\n    borderTop: '2px solid #373B44',\n    padding: '.5rem',\n    display: 'flex'\n  },\n  content: {\n    flex: '1 1 auto',\n    marginRight: '.5rem'\n  },\n  send: {\n    backgroundColor: '#D6DDEC',\n    padding: '.2rem .5rem',\n    border: 'none',\n    ':hover': {\n      backgroundColor: '#2A4B99',\n      cursor: 'pointer',\n      color: '#fff'\n    }\n  }\n};\n\nconst MessageForm = ({\n  addMessage\n}) => {\n  const [content, setContent] = useState(''); //You can improve this function with one hook (useCallback) :\n  // https://fr.reactjs.org/docs/hooks-intro.html\n  // https://fr.reactjs.org/docs/hooks-reference.html\n\n  const onSubmit = e => {\n    addMessage({\n      content,\n      author: 'david',\n      creation: Date.now()\n    });\n    setContent('');\n  }; //You can improve this function with one hook (useCallback) :\n\n\n  const onChange = e => {\n    setContent(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: onChange,\n    name: \"content\",\n    rows: 5,\n    style: styles.content,\n    value: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSubmit,\n    type: \"submit\",\n    style: styles.send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nexport default (({\n  channel = {\n    name: 'Fake channel'\n  }\n}) => {\n  const [messages, setMessages] = useState([{\n    author: 'sergei',\n    creation: 1602831101929,\n    content: `\n    ## 1 - Architecture - Level easy\n    \n    It is now the right time to re-organize/refactor our code. Split this\n    monolithic react Component into multiple section. In the end, we should end\n    up with the following components: 'Header', 'Footer', 'Main', 'Channels',\n    'Channel', 'Messages', 'MessageSend':\n    \n    - 'App.js' file uses 'Header.js', 'Main.js', 'Footer.js'\n    - 'Main.js' file uses 'Channels.js', 'Channel.js'\n    - 'Channels.js' prints the list of channels\n    - 'Channel.js' prints the messages, uses 'Messages.js' and 'MessageSend.js'\n    - 'Messages.js' prints the list of messages inside the current channel\n    - 'MessageForm.js' send a new message\n    \n    \\`\\`\\`\n    +--------------------------------------------+\n    |                  Header                    |\n    +--------------------------------------------+\n    |   Channels    |          Channel           |\n    |               | +------------------------+ |\n    |               | |    Messages / Message  | |\n    |               | +------------------------+ |\n    |               | |      MessageSend       | |\n    |               | +------------------------+ |\n    +--------------------------------------------+\n    |                  Footer                    |\n    +--------------------------------------------+\n    \\`\\`\\`\n    `\n  }, {\n    author: 'david',\n    creation: 1602832138892,\n    content: `\n    ## 2 - Styles - Level easy\n    \n    Give it some styles, use CSS to make it looks good. Possible source of\n    improvements include changing the colors, replacing the HTML 'send' button\n    with an icon, working on the header, providing day/night themes ... be creative\n    `\n  }, {\n    author: 'sergei',\n    creation: 1602840139202,\n    content: `\n    ## 3 - Use an external library - Level medium\n    \n    Format the date in a human readable format. While the date is generated on\n    the server side to ensure its relevance and prevent from forgery, it must be\n    displayed according to the user browser local. The\n    [Moment.js](https://momentjs.com/) library has been the library of choice\n    for many years to accomplish date formatting. Read what is displayed on the\n    top right corner of their homepage, it is now depreciated. Read the reasons\n    and act accordingly.\n    `\n  }, {\n    author: 'david',\n    creation: 1602844139200,\n    content: `\n    ## 4 - Support message contents in Markdown - Level hard\n    \n    Markdown is the most popular syntax to format text into HTML. It is used\n    by the majority of the project Readme files, to write documentation and to\n    generate websites.\n    \n    I recommand you to use the [unified](https://unifiedjs.com/) which is very\n    powerful and comes with a lot of plugins. You can read the Markdown to HTML\n    guide in the learn section and enrich it with your selection of relevant\n    plugins.\n    \n    Consider adding syntax highlight support with a library like\n    [Prism](https://prismjs.com/).\n    `\n  }]);\n\n  const addMessage = newMessage => {\n    setMessages([...messages, newMessage]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App-main\",\n    style: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Channels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Messages for \", channel.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    style: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }, message.author), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }, new Date(message.creation).toString())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, nl2br(message.content)))))), /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/Johan/Documents/ECE/Technologie Web/repos/ING4_Apprenti_SI_01_Lemesle_Johan/src/App.js"],"names":["React","useState","Header","Footer","Channels","nl2br","require","styles","root","boxSizing","display","flexDirection","backgroundColor","padding","main","flex","overflow","channel","height","messages","message","margin","form","borderTop","content","marginRight","send","border","cursor","color","MessageForm","addMessage","setContent","onSubmit","e","author","creation","Date","now","onChange","target","value","name","setMessages","newMessage","map","i","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,YADT;AAEFC,IAAAA,OAAO,EAAE,MAFP;AAGFC,IAAAA,aAAa,EAAE,QAHb;AAIFC,IAAAA,eAAe,EAAE,SAJf;AAKFC,IAAAA,OAAO,EAAE;AALP,GADK;AAQXC,EAAAA,IAAI,EAAE;AACFF,IAAAA,eAAe,EAAE,SADf;AAEFG,IAAAA,IAAI,EAAE,UAFJ;AAGFL,IAAAA,OAAO,EAAE,MAHP;AAIFC,IAAAA,aAAa,EAAE,KAJb;AAKFK,IAAAA,QAAQ,EAAE;AALR,GARK;AAgBXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELH,IAAAA,IAAI,EAAE,UAFD;AAGLL,IAAAA,OAAO,EAAE,MAHJ;AAILC,IAAAA,aAAa,EAAE,QAJV;AAKLK,IAAAA,QAAQ,EAAE;AALL,GAhBE;AAuBXG,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,IAAI,EAAE,UADA;AAENG,IAAAA,MAAM,EAAE,MAFF;AAGNF,IAAAA,QAAQ,EAAE,MAHJ;AAIN,YAAQ;AACJ,gBAAU,CADN;AAEJ,iBAAW,CAFP;AAGJ,oBAAc,CAHV;AAIJ,uBAAiB;AAJb;AAJF,GAvBC;AAkCXI,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELR,IAAAA,OAAO,EAAE,OAFJ;AAGL;AACA,cAAU;AACND,MAAAA,eAAe,EAAE;AADX;AAJL,GAlCE;AA0CXU,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,mBADT;AAEFV,IAAAA,OAAO,EAAE,OAFP;AAGFH,IAAAA,OAAO,EAAE;AAHP,GA1CK;AA+CXc,EAAAA,OAAO,EAAE;AACLT,IAAAA,IAAI,EAAE,UADD;AAELU,IAAAA,WAAW,EAAE;AAFR,GA/CE;AAmDXC,EAAAA,IAAI,EAAE;AACFd,IAAAA,eAAe,EAAE,SADf;AAEFC,IAAAA,OAAO,EAAE,aAFP;AAGFc,IAAAA,MAAM,EAAE,MAHN;AAIF,cAAU;AACNf,MAAAA,eAAe,EAAE,SADX;AAENgB,MAAAA,MAAM,EAAE,SAFF;AAGNC,MAAAA,KAAK,EAAE;AAHD;AAJR;AAnDK,CAAf;;AA+DA,MAAMC,WAAW,GAAG,CAAC;AACIC,EAAAA;AADJ,CAAD,KAEO;AACvB,QAAM,CAACP,OAAD,EAAUQ,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC,CADuB,CAGvB;AACA;AACA;;AACA,QAAMgC,QAAQ,GAAIC,CAAD,IAAO;AACpBH,IAAAA,UAAU,CAAC;AACPP,MAAAA,OADO;AAEPW,MAAAA,MAAM,EAAE,OAFD;AAGPC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AAHH,KAAD,CAAV;AAMAN,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GARD,CANuB,CAgBvB;;;AACA,QAAMO,QAAQ,GAAIL,CAAD,IAAO;AACpBF,IAAAA,UAAU,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAElC,MAAM,CAACe,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEiB,QADd;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,IAAI,EAAE,CAHV;AAII,IAAA,KAAK,EAAEhC,MAAM,CAACiB,OAJlB;AAKI,IAAA,KAAK,EAAEA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAQ,IAAA,OAAO,EAAES,QAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE1B,MAAM,CAACmB,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CADJ;AAcH,CArCD;;AAuCA,gBAAe,CAAC;AACIT,EAAAA,OAAO,GAAG;AACNyB,IAAAA,IAAI,EAAE;AADA;AADd,CAAD,KAIO;AAClB,QAAM,CAACvB,QAAD,EAAWwB,WAAX,IAA0B1C,QAAQ,CAAC,CAAC;AACtCkC,IAAAA,MAAM,EAAE,QAD8B;AAEtCC,IAAAA,QAAQ,EAAE,aAF4B;AAGtCZ,IAAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhC8C,GAAD,EAiCtC;AACCW,IAAAA,MAAM,EAAE,OADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCZ,IAAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AATO,GAjCsC,EA2CtC;AACCW,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCZ,IAAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbO,GA3CsC,EAyDtC;AACCW,IAAAA,MAAM,EAAE,OADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCZ,IAAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBO,GAzDsC,CAAD,CAAxC;;AA6EA,QAAMO,UAAU,GAAGa,UAAU,IAAI;AAC7BD,IAAAA,WAAW,CAAC,CACR,GAAGxB,QADK,EAERyB,UAFQ,CAAD,CAAX;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAErC,MAAM,CAACC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAED,MAAM,CAACO,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAEP,MAAM,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAEV,MAAM,CAACY,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,OAAO,CAACyB,IAA1B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,QAAQ,CAAC0B,GAAT,CAAa,CAACzB,OAAD,EAAU0B,CAAV,kBACV;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,KAAK,EAAEvC,MAAM,CAACa,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAO,CAACe,MAAf,CADJ,EAEK,GAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,IAAIE,IAAJ,CAASjB,OAAO,CAACgB,QAAjB,CAAD,CAA6BW,QAA7B,EAAP,CAHJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1C,KAAK,CAACe,OAAO,CAACI,OAAT,CADV,CANJ,CADH,CADL,CAFJ,CADJ,eAkBI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEO,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CAFJ,CAFJ,eAyBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ;AA6BH,CAtHD","sourcesContent":["import React, {useState} from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Channels from './Channels';\nimport './App.css';\n\n//Permet d'inserer un retour Ã  la ligne\n//https://github.com/yosuke-furukawa/react-nl2br#readme\nconst nl2br = require('react-nl2br');\n\nconst styles = {\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#565E71',\n        padding: 50\n    },\n    main: {\n        backgroundColor: '#373B44',\n        flex: '1 1 auto',\n        display: 'flex',\n        flexDirection: 'row',\n        overflow: 'hidden'\n    },\n    \n    channel: {\n        height: '100%',\n        flex: '1 1 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    messages: {\n        flex: '1 1 auto',\n        height: '100%',\n        overflow: 'auto',\n        '& ul': {\n            'margin': 0,\n            'padding': 0,\n            'textIndent': 0,\n            'listStyleType': 0\n        }\n    },\n    message: {\n        margin: '.2rem',\n        padding: '.2rem',\n        // backgroundColor: '#66728E',\n        ':hover': {\n            backgroundColor: 'rgba(255,255,255,.2)'\n        }\n    },\n    form: {\n        borderTop: '2px solid #373B44',\n        padding: '.5rem',\n        display: 'flex'\n    },\n    content: {\n        flex: '1 1 auto',\n        marginRight: '.5rem'\n    },\n    send: {\n        backgroundColor: '#D6DDEC',\n        padding: '.2rem .5rem',\n        border: 'none',\n        ':hover': {\n            backgroundColor: '#2A4B99',\n            cursor: 'pointer',\n            color: '#fff'\n        }\n    }\n};\n\nconst MessageForm = ({\n                         addMessage\n                     }) => {\n    const [content, setContent] = useState('');\n\n    //You can improve this function with one hook (useCallback) :\n    // https://fr.reactjs.org/docs/hooks-intro.html\n    // https://fr.reactjs.org/docs/hooks-reference.html\n    const onSubmit = (e) => {\n        addMessage({\n            content,\n            author: 'david',\n            creation: Date.now(),\n        });\n\n        setContent('');\n    };\n\n    //You can improve this function with one hook (useCallback) :\n    const onChange = (e) => {\n        setContent(e.target.value);\n    };\n\n    return (\n        <div style={styles.form}>\n            <textarea\n                onChange={onChange}\n                name=\"content\"\n                rows={5}\n                style={styles.content}\n                value={content}\n            />\n            <button onClick={onSubmit} type=\"submit\" style={styles.send}>\n                Send\n            </button>\n        </div>\n    )\n};\n\nexport default ({\n                    channel = {\n                        name: 'Fake channel'\n                    }\n                }) => {\n    const [messages, setMessages] = useState([{\n        author: 'sergei',\n        creation: 1602831101929,\n        content: `\n    ## 1 - Architecture - Level easy\n    \n    It is now the right time to re-organize/refactor our code. Split this\n    monolithic react Component into multiple section. In the end, we should end\n    up with the following components: 'Header', 'Footer', 'Main', 'Channels',\n    'Channel', 'Messages', 'MessageSend':\n    \n    - 'App.js' file uses 'Header.js', 'Main.js', 'Footer.js'\n    - 'Main.js' file uses 'Channels.js', 'Channel.js'\n    - 'Channels.js' prints the list of channels\n    - 'Channel.js' prints the messages, uses 'Messages.js' and 'MessageSend.js'\n    - 'Messages.js' prints the list of messages inside the current channel\n    - 'MessageForm.js' send a new message\n    \n    \\`\\`\\`\n    +--------------------------------------------+\n    |                  Header                    |\n    +--------------------------------------------+\n    |   Channels    |          Channel           |\n    |               | +------------------------+ |\n    |               | |    Messages / Message  | |\n    |               | +------------------------+ |\n    |               | |      MessageSend       | |\n    |               | +------------------------+ |\n    +--------------------------------------------+\n    |                  Footer                    |\n    +--------------------------------------------+\n    \\`\\`\\`\n    `\n    }, {\n        author: 'david',\n        creation: 1602832138892,\n        content: `\n    ## 2 - Styles - Level easy\n    \n    Give it some styles, use CSS to make it looks good. Possible source of\n    improvements include changing the colors, replacing the HTML 'send' button\n    with an icon, working on the header, providing day/night themes ... be creative\n    `\n    }, {\n        author: 'sergei',\n        creation: 1602840139202,\n        content: `\n    ## 3 - Use an external library - Level medium\n    \n    Format the date in a human readable format. While the date is generated on\n    the server side to ensure its relevance and prevent from forgery, it must be\n    displayed according to the user browser local. The\n    [Moment.js](https://momentjs.com/) library has been the library of choice\n    for many years to accomplish date formatting. Read what is displayed on the\n    top right corner of their homepage, it is now depreciated. Read the reasons\n    and act accordingly.\n    `\n    }, {\n        author: 'david',\n        creation: 1602844139200,\n        content: `\n    ## 4 - Support message contents in Markdown - Level hard\n    \n    Markdown is the most popular syntax to format text into HTML. It is used\n    by the majority of the project Readme files, to write documentation and to\n    generate websites.\n    \n    I recommand you to use the [unified](https://unifiedjs.com/) which is very\n    powerful and comes with a lot of plugins. You can read the Markdown to HTML\n    guide in the learn section and enrich it with your selection of relevant\n    plugins.\n    \n    Consider adding syntax highlight support with a library like\n    [Prism](https://prismjs.com/).\n    `\n    }]);\n\n    const addMessage = newMessage => {\n        setMessages([\n            ...messages,\n            newMessage\n        ]);\n    };\n\n    return (\n        <div className=\"app\" style={styles.root}>\n            <Header/>\n            <main className='App-main' style={styles.main}>\n                <Channels/>\n                <div style={styles.channel}>\n                    <div style={styles.messages}>\n                        <h1>Messages for {channel.name}</h1>\n                        <ul>\n                            {messages.map((message, i) => (\n                                <li key={i} style={styles.message}>\n                                    <p>\n                                        <span>{message.author}</span>\n                                        {' '}\n                                        <span>{(new Date(message.creation)).toString()}</span>\n                                    </p>\n                                    <div>\n                                        {nl2br(message.content)}\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <MessageForm addMessage={addMessage} />\n                </div>\n            </main>\n            <Footer/>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}